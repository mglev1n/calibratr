% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calibration_curve.R
\name{calib_curve}
\alias{calib_curve}
\alias{calib_curve.data.frame}
\title{Calibration curve}
\usage{
calib_curve(data, ...)

\method{calib_curve}{data.frame}(
  data,
  truth,
  ...,
  bins = 10,
  na_rm = TRUE,
  event_level = yardstick:::yardstick_event_level(),
  case_weights = NULL
)
}
\arguments{
\item{data}{A data.frame containing the columns specified by \code{truth} and \code{...}}

\item{...}{A set of unquoted column names or one or more dplyr selector functions to choose which variables contain the class probabilities. If truth is binary, only 1 column should be selected. Otherwise, there should be as many columns as factor levels of truth.}

\item{truth}{The unquoted column name corresponding to the \code{truth} column.}

\item{bins}{A single \code{numeric} value defining the number of probability bins to consider. Defaults to 10.}

\item{na_rm}{A logical value indicating whether NA values should be stripped before the computation proceeds.}

\item{event_level}{A single string. Either "first" or "second" to specify which level of truth to consider as the "event". This argument is only applicable when estimator = "binary".}

\item{case_weights}{(not currently used)}
}
\value{
A tibble with class \code{calib_df} or \code{calib_grouped_df} having
columns \code{.bin}, \code{.truth}, \code{.estimate}, \code{.ci_lo}, and \code{.ci_high}.
}
\description{
\code{calib_curve()} constructs bins of predicted probabilities for a binary classifier and returns a
tibble.
}
\details{
There is a \code{\link[ggplot2:autoplot]{ggplot2::autoplot()}}
method for quickly visualizing the calibration plots. This currently works for
binary outputs, and also works with grouped data (i.e. from
resamples). This function is inspired by the \code{calib_plot} function from the \code{{gmish}} package, available at \url{https://github.com/gweissman/gmish}
}
\section{Relevant Level}{


There is no common convention on which factor level should
automatically be considered the "event" or "positive" result
when computing binary classification metrics. In \code{yardstick}, the default
is to use the \emph{first} level. To alter this, change the argument
\code{event_level} to \code{"second"} to consider the \emph{last} level of the factor the
level of interest. For multiclass extensions involving one-vs-all
comparisons (such as macro averaging), this option is ignored and
the "one" level is always the relevant result.
}

\author{
Michael Levin
}
\concept{curve metrics}
